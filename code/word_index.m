% You are given a list of strings, each being a list of words divided by spaces. Break the strings into words, 
% then return a master word table of all the words and an indexed version of each string.
% 
% The master list should have no repeated entries and should be sorted in alphabetical order.
% 
% Example
% 
% If str_list = {'one two three','two one four zero'}
% 
% then
% 
% word_table = {'four','one','three','two','zero'}
% str_index_list = {[2 4 3],[4 2 1 5]}.
% Notice that no words are repeated in word_table, 
% and each string in the string_list can be regenerated by referencing into the word_table using the string_index_list.

function [word_table,str_index_list] = word_index(str_list)
[m,n]=size(str_list);
s3={};
for i=1:m
    for j=1:n
        s3=[s3 strsplit(cell2mat(str_list(i,j)),' ')];
    end
end
word_table=unique(s3);
  for p=1:m*n
      
          substr=[strsplit(cell2mat(str_list(p)),' ')];
          k=[];
          for r=1:length(substr)
              for s=1:length(word_table)
                  if(isequal(substr(r),word_table(s)))
                      k=[k s];
                      break
                  end
              end
              str_index_list(p)={k};
          end
      
  end
end